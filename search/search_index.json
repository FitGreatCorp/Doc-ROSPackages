{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AirFace ROS v1.0 \u67b6\u6784 # \u5206\u652f\u7ba1\u7406 1. \u65b0\u529f\u80fd\u5f00\u53d1\u65f6\uff0c\u6700\u5148\u5f00\u59cb\u5f00\u53d1\u7684\u4eba\u5458\u52a1\u5fc5\u57fa\u4e8e\u8fdc\u7a0b\u4e3b\u5206\u652f\u65b0\u5efa\u5206\u652f\u8fdb\u884c\u5f00\u53d1\uff0c\u6240\u6709\u6b63\u5728\u5f00\u53d1\u9636\u6bb5\u7684\u529f\u80fd\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u90fd\u5e94\u6709\u76f8\u5e94\u7684\u5206\u652f 2. \u65b0\u529f\u80fd\u5206\u652f\u547d\u540d\u65f6\uff0c\u4e0d\u5f97\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u91cd\u540d 3. \u4ee3\u7801\u63d0\u4ea4\u5728\u5e94\u8be5\u63d0\u4ea4\u7684\u5206\u652f 4. \u968f\u65f6\u53ef\u4ee5\u5207\u6362\u5230\u7ebf\u4e0a\u7a33\u5b9a\u7248\u672c\u4ee3\u7801 5. \u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c","title":"\u6982\u8ff0"},{"location":"#airface-ros-v10","text":"\u5206\u652f\u7ba1\u7406 1. \u65b0\u529f\u80fd\u5f00\u53d1\u65f6\uff0c\u6700\u5148\u5f00\u59cb\u5f00\u53d1\u7684\u4eba\u5458\u52a1\u5fc5\u57fa\u4e8e\u8fdc\u7a0b\u4e3b\u5206\u652f\u65b0\u5efa\u5206\u652f\u8fdb\u884c\u5f00\u53d1\uff0c\u6240\u6709\u6b63\u5728\u5f00\u53d1\u9636\u6bb5\u7684\u529f\u80fd\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u90fd\u5e94\u6709\u76f8\u5e94\u7684\u5206\u652f 2. \u65b0\u529f\u80fd\u5206\u652f\u547d\u540d\u65f6\uff0c\u4e0d\u5f97\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u91cd\u540d 3. \u4ee3\u7801\u63d0\u4ea4\u5728\u5e94\u8be5\u63d0\u4ea4\u7684\u5206\u652f 4. \u968f\u65f6\u53ef\u4ee5\u5207\u6362\u5230\u7ebf\u4e0a\u7a33\u5b9a\u7248\u672c\u4ee3\u7801 5. \u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c","title":"AirFace ROS v1.0 \u67b6\u6784"},{"location":"summary/","text":"V1.0.0 \u2013 2019\u5e7411\u67087\u65e5 # + \u6587\u6863\u7ed3\u6784\u521d\u59cb\u5316 + \u589e\u52a0summary\u9875\u9762","title":"\u6587\u6863\u4fee\u6539\u8bb0\u5f55"},{"location":"summary/#v100-2019117","text":"+ \u6587\u6863\u7ed3\u6784\u521d\u59cb\u5316 + \u589e\u52a0summary\u9875\u9762","title":"V1.0.0 \u2013 2019\u5e7411\u67087\u65e5"},{"location":"API/errors/","text":"errors.md","title":"Errors"},{"location":"packages/airface_drive_model/","text":"Package Summary # AirFace\u673a\u5668\u4eba\u7535\u673a\u9a71\u52a8\u6a21\u5757\uff0c\u901a\u8fc7\u8c03\u7528\u6a21\u5757service\uff0c\u9a71\u52a8\u673a\u5668\u4eba\u8fd0\u52a8 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> 1. Installation # sudo apt-get install 'ros-kinetic-airface-drive-model' 2. ROS API # 2.1 Published Topics # odom (nav_msgs/Odometry) publish robot odometry messages 2.2 Services # set_lift (airface_drive_msgs/setmode) set robot lift up or down with mode value 1 or 2, while mode value 0 is stop lift set_power_lock (airface_drive_msgs/setmode) set robot power lock or unlock with mode value 1 or 2 get_urgent_status (airface_drive_msgs/getInfo) get robot urgent button status get_lock_status (airface_drive_msgs/getInfo) get robot power lock status 2.3 Parameters # Static Parameters acc_vx (double, default: 1.0) Specify the accleration speed for robot driver.","title":"airface_drive_model"},{"location":"packages/airface_drive_model/#package-summary","text":"AirFace\u673a\u5668\u4eba\u7535\u673a\u9a71\u52a8\u6a21\u5757\uff0c\u901a\u8fc7\u8c03\u7528\u6a21\u5757service\uff0c\u9a71\u52a8\u673a\u5668\u4eba\u8fd0\u52a8 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn>","title":"Package Summary"},{"location":"packages/airface_drive_model/#1-installation","text":"sudo apt-get install 'ros-kinetic-airface-drive-model'","title":"1. Installation"},{"location":"packages/airface_drive_model/#2-ros-api","text":"","title":"2. ROS API"},{"location":"packages/airface_drive_model/#21-published-topics","text":"odom (nav_msgs/Odometry) publish robot odometry messages","title":"2.1 Published Topics"},{"location":"packages/airface_drive_model/#22-services","text":"set_lift (airface_drive_msgs/setmode) set robot lift up or down with mode value 1 or 2, while mode value 0 is stop lift set_power_lock (airface_drive_msgs/setmode) set robot power lock or unlock with mode value 1 or 2 get_urgent_status (airface_drive_msgs/getInfo) get robot urgent button status get_lock_status (airface_drive_msgs/getInfo) get robot power lock status","title":"2.2 Services"},{"location":"packages/airface_drive_model/#23-parameters","text":"Static Parameters acc_vx (double, default: 1.0) Specify the accleration speed for robot driver.","title":"2.3 Parameters"},{"location":"packages/auto_parking/","text":"Package Summary # AirFace\u81ea\u52a8\u56de\u5145\u6a21\u5757\uff0c\u673a\u5668\u4eba\u901a\u8fc7\u5168\u5c40\u8def\u5f84\u5bfc\u822a\u5230\u8fbe\u5145\u7535\u6869\u4f4d\u7f6e\uff0c\u63a5\u7740\u901a\u8fc7\u6444\u50cf\u5934\u5bfb\u627e\u5145\u7535\u6869\u4e8c\u7ef4\u7801\uff0c\u627e\u5230\u4e8c\u7ef4\u7801\u540e\uff0c\u65cb\u8f6c\u81f3\u80cc\u5bf9\u5145\u7535\u6869\uff0c\u901a\u8fc7\u7ea2\u5916\u5bfb\u7ebf\u6280\u672f\u56de\u5230\u5145\u7535\u6869\u8fdb\u884c\u5145\u7535\u3002 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> 1. Installation # sudo apt-get install 'ros-kinetic-auto-parking' 2. ROS API # 2.1 Published Topics # cmd_vel (geometry_msgs/Twist) publish velocity commands when park robot cmd_ctrl (geometry_msgs/Byte) publish control commands of robot_opencr when park robot 2.2 Subscribed Topics # ir_rangers (sensor_msgs/Range) subcribe ir_ranges for tracking charging dock battery_state (sensor_msgs/BatteryState) robot should stop when battery_state's field power_supply_status is true odometry/filtered (nav_msgs/Odometry) subscribe odometry data to calculate robot pose ar_pose_marker (ar_track_alvar_msgs/AlvarMarkers) subscribe ar_pose_marker to cognitive mark 2.3 Action API # Action Subscribed Topics auto_parking/goal (airface_drive_msgs/AutoParkingActionGoal) A goal for auto_parking to pursue in the world. auto_parking/cancel (actionlib_msgs/GoalID) A request to cancel a specific goal. Action Published Topics auto_parking/feedback (airface_drive_msgs/AutoParkingActionFeedback) Feedback contains the current position of the base in the world. auto_parking/status (actionlib_msgs/GoalStatusArray) Provides status information on the goals that are sent to the auto_parking action. auto_parking/result (airface_drive_msgs/AutoParkingActionResult) Result is empty for the auto_parking action.","title":"auto_parking"},{"location":"packages/auto_parking/#package-summary","text":"AirFace\u81ea\u52a8\u56de\u5145\u6a21\u5757\uff0c\u673a\u5668\u4eba\u901a\u8fc7\u5168\u5c40\u8def\u5f84\u5bfc\u822a\u5230\u8fbe\u5145\u7535\u6869\u4f4d\u7f6e\uff0c\u63a5\u7740\u901a\u8fc7\u6444\u50cf\u5934\u5bfb\u627e\u5145\u7535\u6869\u4e8c\u7ef4\u7801\uff0c\u627e\u5230\u4e8c\u7ef4\u7801\u540e\uff0c\u65cb\u8f6c\u81f3\u80cc\u5bf9\u5145\u7535\u6869\uff0c\u901a\u8fc7\u7ea2\u5916\u5bfb\u7ebf\u6280\u672f\u56de\u5230\u5145\u7535\u6869\u8fdb\u884c\u5145\u7535\u3002 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn>","title":"Package Summary"},{"location":"packages/auto_parking/#1-installation","text":"sudo apt-get install 'ros-kinetic-auto-parking'","title":"1. Installation"},{"location":"packages/auto_parking/#2-ros-api","text":"","title":"2. ROS API"},{"location":"packages/auto_parking/#21-published-topics","text":"cmd_vel (geometry_msgs/Twist) publish velocity commands when park robot cmd_ctrl (geometry_msgs/Byte) publish control commands of robot_opencr when park robot","title":"2.1 Published Topics"},{"location":"packages/auto_parking/#22-subscribed-topics","text":"ir_rangers (sensor_msgs/Range) subcribe ir_ranges for tracking charging dock battery_state (sensor_msgs/BatteryState) robot should stop when battery_state's field power_supply_status is true odometry/filtered (nav_msgs/Odometry) subscribe odometry data to calculate robot pose ar_pose_marker (ar_track_alvar_msgs/AlvarMarkers) subscribe ar_pose_marker to cognitive mark","title":"2.2 Subscribed Topics"},{"location":"packages/auto_parking/#23-action-api","text":"Action Subscribed Topics auto_parking/goal (airface_drive_msgs/AutoParkingActionGoal) A goal for auto_parking to pursue in the world. auto_parking/cancel (actionlib_msgs/GoalID) A request to cancel a specific goal. Action Published Topics auto_parking/feedback (airface_drive_msgs/AutoParkingActionFeedback) Feedback contains the current position of the base in the world. auto_parking/status (actionlib_msgs/GoalStatusArray) Provides status information on the goals that are sent to the auto_parking action. auto_parking/result (airface_drive_msgs/AutoParkingActionResult) Result is empty for the auto_parking action.","title":"2.3 Action API"},{"location":"packages/auto_tracking/","text":"Package Summary # AirFace\u6807\u7b7e\u8ddf\u8e2a\u6a21\u5757\uff0c\u673a\u5668\u4eba\u4e00\u8fb9\u65cb\u8f6c\u4e00\u8fb9\u901a\u8fc7\u6444\u50cf\u5934\u67e5\u770b\u5468\u56f4\u7684\u6807\u7b7e\uff0c\u5982\u679c\u627e\u5230\u6807\u7b7e\uff0c\u5219\u91cd\u65b0\u5b9a\u4f4d\u673a\u5668\u4eba\u5728\u5730\u56fe\u4e2d\u7684\u4f4d\u7f6e\u3002 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> 1. Installation # sudo apt-get install 'ros-kinetic-auto-tracking' 2. ROS API # 2.1 Published Topics # cmd_vel (geometry_msgs/Twist) publish velocity commands when tacking marks initialpose (geometry_msgs/PoseWithCovarStamped) publish initialpose after tracked mark 2.2 Subscribed Topics # ir_rangers (sensor_msgs/Range) subcribe ir_ranges for tracking charging dock battery_state (sensor_msgs/BatteryState) robot should stop when battery_state's field power_supply_status is true odometry/filtered (nav_msgs/Odometry) subscribe odometry data to calculate robot pose ar_pose_marker (ar_track_alvar_msgs/AlvarMarkers) subscribe ar_pose_marker to cognitive mark 2.3 Action API # Action Subscribed Topics auto_posing/goal (airface_drive_msgs/AutoPosingActionGoal) A goal for auto_parking to pursue in the world. auto_posing/cancel (actionlib_msgs/GoalID) A request to cancel a specific goal. Action Published Topics auto_posing/feedback (airface_drive_msgs/AutoPosinggActionFeedback) Feedback contains the current position of the base in the world. auto_posing/status (actionlib_msgs/GoalStatusArray) Provides status information on the goals that are sent to the auto_posing action. auto_posing/result (airface_drive_msgs/AutoPosingActionResult) Result is empty for the auto_posing action.","title":"auto_tracking"},{"location":"packages/auto_tracking/#package-summary","text":"AirFace\u6807\u7b7e\u8ddf\u8e2a\u6a21\u5757\uff0c\u673a\u5668\u4eba\u4e00\u8fb9\u65cb\u8f6c\u4e00\u8fb9\u901a\u8fc7\u6444\u50cf\u5934\u67e5\u770b\u5468\u56f4\u7684\u6807\u7b7e\uff0c\u5982\u679c\u627e\u5230\u6807\u7b7e\uff0c\u5219\u91cd\u65b0\u5b9a\u4f4d\u673a\u5668\u4eba\u5728\u5730\u56fe\u4e2d\u7684\u4f4d\u7f6e\u3002 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn>","title":"Package Summary"},{"location":"packages/auto_tracking/#1-installation","text":"sudo apt-get install 'ros-kinetic-auto-tracking'","title":"1. Installation"},{"location":"packages/auto_tracking/#2-ros-api","text":"","title":"2. ROS API"},{"location":"packages/auto_tracking/#21-published-topics","text":"cmd_vel (geometry_msgs/Twist) publish velocity commands when tacking marks initialpose (geometry_msgs/PoseWithCovarStamped) publish initialpose after tracked mark","title":"2.1 Published Topics"},{"location":"packages/auto_tracking/#22-subscribed-topics","text":"ir_rangers (sensor_msgs/Range) subcribe ir_ranges for tracking charging dock battery_state (sensor_msgs/BatteryState) robot should stop when battery_state's field power_supply_status is true odometry/filtered (nav_msgs/Odometry) subscribe odometry data to calculate robot pose ar_pose_marker (ar_track_alvar_msgs/AlvarMarkers) subscribe ar_pose_marker to cognitive mark","title":"2.2 Subscribed Topics"},{"location":"packages/auto_tracking/#23-action-api","text":"Action Subscribed Topics auto_posing/goal (airface_drive_msgs/AutoPosingActionGoal) A goal for auto_parking to pursue in the world. auto_posing/cancel (actionlib_msgs/GoalID) A request to cancel a specific goal. Action Published Topics auto_posing/feedback (airface_drive_msgs/AutoPosinggActionFeedback) Feedback contains the current position of the base in the world. auto_posing/status (actionlib_msgs/GoalStatusArray) Provides status information on the goals that are sent to the auto_posing action. auto_posing/result (airface_drive_msgs/AutoPosingActionResult) Result is empty for the auto_posing action.","title":"2.3 Action API"},{"location":"packages/move_base/","text":"Package Summary # AirFace\u673a\u5668\u4eba\u7535\u673a\u9a71\u52a8\u6a21\u5757\uff0c\u901a\u8fc7\u8c03\u7528\u6a21\u5757service\uff0c\u9a71\u52a8\u673a\u5668\u4eba\u8fd0\u52a8 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> License: BSD 3-clause. See license attached 1. Installation # sudo apt-get install 'ros-kinetic-airface-drive-model' 2. ROS API # 2.1 Published Topics # odom (nav_msgs/Odometry) publish robot odometry messages 2.2 Services # set_lift (airface_drive_msgs/setmode) set robot lift up or down with mode value 1 or 2, while mode value 0 is stop lift set_power_lock (airface_drive_msgs/setmode) set robot power lock or unlock with mode value 1 or 2 get_urgent_status (airface_drive_msgs/getInfo) get robot urgent button status get_lock_status (airface_drive_msgs/getInfo) get robot power lock status 2.3 Parameters # Static Parameters mode (string, default: preset) Specify the mode to start camera streams. Mode comprises of height, width and fps. Preset mode enables default values whereas Manual mode enables the specified parameter values. Dynamically Reconfigurable Parameters ~enable_depth (bool, default: True) Enable Depth 2.4 Provided tf Transforms # camera_link \u2192 camera_rgb_frame Static Transform base frame to color frame.","title":"Move base"},{"location":"packages/move_base/#package-summary","text":"AirFace\u673a\u5668\u4eba\u7535\u673a\u9a71\u52a8\u6a21\u5757\uff0c\u901a\u8fc7\u8c03\u7528\u6a21\u5757service\uff0c\u9a71\u52a8\u673a\u5668\u4eba\u8fd0\u52a8 MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> License: BSD 3-clause. See license attached","title":"Package Summary"},{"location":"packages/move_base/#1-installation","text":"sudo apt-get install 'ros-kinetic-airface-drive-model'","title":"1. Installation"},{"location":"packages/move_base/#2-ros-api","text":"","title":"2. ROS API"},{"location":"packages/move_base/#21-published-topics","text":"odom (nav_msgs/Odometry) publish robot odometry messages","title":"2.1 Published Topics"},{"location":"packages/move_base/#22-services","text":"set_lift (airface_drive_msgs/setmode) set robot lift up or down with mode value 1 or 2, while mode value 0 is stop lift set_power_lock (airface_drive_msgs/setmode) set robot power lock or unlock with mode value 1 or 2 get_urgent_status (airface_drive_msgs/getInfo) get robot urgent button status get_lock_status (airface_drive_msgs/getInfo) get robot power lock status","title":"2.2 Services"},{"location":"packages/move_base/#23-parameters","text":"Static Parameters mode (string, default: preset) Specify the mode to start camera streams. Mode comprises of height, width and fps. Preset mode enables default values whereas Manual mode enables the specified parameter values. Dynamically Reconfigurable Parameters ~enable_depth (bool, default: True) Enable Depth","title":"2.3 Parameters"},{"location":"packages/move_base/#24-provided-tf-transforms","text":"camera_link \u2192 camera_rgb_frame Static Transform base frame to color frame.","title":"2.4 Provided tf Transforms"}]}