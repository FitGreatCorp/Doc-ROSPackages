{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AirFace ROS v1.0 \u67b6\u6784 # \u5206\u652f\u7ba1\u7406 1. \u65b0\u529f\u80fd\u5f00\u53d1\u65f6\uff0c\u6700\u5148\u5f00\u59cb\u5f00\u53d1\u7684\u4eba\u5458\u52a1\u5fc5\u57fa\u4e8e\u8fdc\u7a0b\u4e3b\u5206\u652f\u65b0\u5efa\u5206\u652f\u8fdb\u884c\u5f00\u53d1\uff0c\u6240\u6709\u6b63\u5728\u5f00\u53d1\u9636\u6bb5\u7684\u529f\u80fd\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u90fd\u5e94\u6709\u76f8\u5e94\u7684\u5206\u652f 2. \u65b0\u529f\u80fd\u5206\u652f\u547d\u540d\u65f6\uff0c\u4e0d\u5f97\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u91cd\u540d 3. \u4ee3\u7801\u63d0\u4ea4\u5728\u5e94\u8be5\u63d0\u4ea4\u7684\u5206\u652f 4. \u968f\u65f6\u53ef\u4ee5\u5207\u6362\u5230\u7ebf\u4e0a\u7a33\u5b9a\u7248\u672c\u4ee3\u7801 5. \u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c","title":"\u6982\u8ff0"},{"location":"#airface-ros-v10","text":"\u5206\u652f\u7ba1\u7406 1. \u65b0\u529f\u80fd\u5f00\u53d1\u65f6\uff0c\u6700\u5148\u5f00\u59cb\u5f00\u53d1\u7684\u4eba\u5458\u52a1\u5fc5\u57fa\u4e8e\u8fdc\u7a0b\u4e3b\u5206\u652f\u65b0\u5efa\u5206\u652f\u8fdb\u884c\u5f00\u53d1\uff0c\u6240\u6709\u6b63\u5728\u5f00\u53d1\u9636\u6bb5\u7684\u529f\u80fd\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u90fd\u5e94\u6709\u76f8\u5e94\u7684\u5206\u652f 2. \u65b0\u529f\u80fd\u5206\u652f\u547d\u540d\u65f6\uff0c\u4e0d\u5f97\u4e0e\u8fdc\u7a0b\u4ed3\u5e93\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u91cd\u540d 3. \u4ee3\u7801\u63d0\u4ea4\u5728\u5e94\u8be5\u63d0\u4ea4\u7684\u5206\u652f 4. \u968f\u65f6\u53ef\u4ee5\u5207\u6362\u5230\u7ebf\u4e0a\u7a33\u5b9a\u7248\u672c\u4ee3\u7801 5. \u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c","title":"AirFace ROS v1.0 \u67b6\u6784"},{"location":"summary/","text":"V1.0.0 \u2013 2019\u5e7411\u67087\u65e5 # + \u6587\u6863\u7ed3\u6784\u521d\u59cb\u5316 + \u589e\u52a0summary\u9875\u9762","title":"\u6587\u6863\u4fee\u6539\u8bb0\u5f55"},{"location":"summary/#v100-2019117","text":"+ \u6587\u6863\u7ed3\u6784\u521d\u59cb\u5316 + \u589e\u52a0summary\u9875\u9762","title":"V1.0.0 \u2013 2019\u5e7411\u67087\u65e5"},{"location":"API/errors/","text":"errors.md","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"packages/airface_drive_model/","text":"Package Summary # RealSense Camera package allowing access to Intel 3D cameras and advanced modules MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> License: BSD 3-clause. See license attached 1. Installation # sudo apt-get install 'ros-*-realsense-camera' 2. ROS API # 2.1 Published Topics # color/camera_info (sensor_msgs/CameraInfo) Camera calibration and metadata. color/image_raw (sensor_msgs/Image) Color rectified image. RGB format. 2.2 Services # get_settings (std_srvs/Empty) Gets the current value of the supported camera options in \"options:value\" format separated by semicolon returned as std_msgs/String. 2.3 Parameters # Static Parameters mode (string, default: preset) Specify the mode to start camera streams. Mode comprises of height, width and fps. Preset mode enables default values whereas Manual mode enables the specified parameter values. Dynamically Reconfigurable Parameters ~enable_depth (bool, default: True) Enable Depth 2.4 Provided tf Transforms # camera_link \u2192 camera_rgb_frame Static Transform base frame to color frame.","title":"airface_drive_model"},{"location":"packages/airface_drive_model/#package-summary","text":"RealSense Camera package allowing access to Intel 3D cameras and advanced modules MaintainerStatus: maintained Maintainer: Ryan Ren<Ryanren@fitgreat.cn> Author: Ryan Ren<Ryanren@fitgreat.cn> License: BSD 3-clause. See license attached","title":"Package Summary"},{"location":"packages/airface_drive_model/#1-installation","text":"sudo apt-get install 'ros-*-realsense-camera'","title":"1. Installation"},{"location":"packages/airface_drive_model/#2-ros-api","text":"","title":"2. ROS API"},{"location":"packages/airface_drive_model/#21-published-topics","text":"color/camera_info (sensor_msgs/CameraInfo) Camera calibration and metadata. color/image_raw (sensor_msgs/Image) Color rectified image. RGB format.","title":"2.1 Published Topics"},{"location":"packages/airface_drive_model/#22-services","text":"get_settings (std_srvs/Empty) Gets the current value of the supported camera options in \"options:value\" format separated by semicolon returned as std_msgs/String.","title":"2.2 Services"},{"location":"packages/airface_drive_model/#23-parameters","text":"Static Parameters mode (string, default: preset) Specify the mode to start camera streams. Mode comprises of height, width and fps. Preset mode enables default values whereas Manual mode enables the specified parameter values. Dynamically Reconfigurable Parameters ~enable_depth (bool, default: True) Enable Depth","title":"2.3 Parameters"},{"location":"packages/airface_drive_model/#24-provided-tf-transforms","text":"camera_link \u2192 camera_rgb_frame Static Transform base frame to color frame.","title":"2.4 Provided tf Transforms"}]}